{
  "service": {
    "service": "energy-stats",
    "serviceObject": {
      "name": "energy-stats"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs16.x",
      "environment": {
        "user_pool_id": {
          "Ref": "UserPool"
        },
        "client_id": {
          "Ref": "UserClient"
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "cognito-idp:AdminInitiateAuth",
            "cognito-idp:AdminCreateUser",
            "cognito-idp:AdminSetUserPassword"
          ],
          "Resource": "*"
        }
      ],
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "LoginUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/energy-stats-dev-loginUser"
            }
          },
          "SignupUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/energy-stats-dev-signupUser"
            }
          },
          "PrivateAPILogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/energy-stats-dev-privateAPI"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "energy-stats",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/energy-stats-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/energy-stats-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "energy-stats",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "LoginUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/energy-stats/dev/1667658854764-2022-11-05T14:34:14.764Z/loginUser.zip"
              },
              "Handler": "backend/auth/login.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "energy-stats-dev-loginUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginUserLogGroup"
            ]
          },
          "SignupUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/energy-stats/dev/1667658854764-2022-11-05T14:34:14.764Z/signupUser.zip"
              },
              "Handler": "backend/auth/signup.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "energy-stats-dev-signupUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignupUserLogGroup"
            ]
          },
          "PrivateAPILambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/energy-stats/dev/1667658854764-2022-11-05T14:34:14.764Z/privateAPI.zip"
              },
              "Handler": "backend/auth/private.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "energy-stats-dev-privateAPI",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PrivateAPILogGroup"
            ]
          },
          "PrivateAPILambdaVersionZQz60VO7rv8vdZPJ0wD76EabJmGXGs0Uu1bhN6p49M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PrivateAPILambdaFunction"
              },
              "CodeSha256": "xBU0SJ6uXhLypq+NkL8LS7GpKTa0hm+iRLyR64JMXEU="
            }
          },
          "LoginUserLambdaVersion0emDLVWzTXjdhGhciVf1COPItWsIFjUGQAb5fXt5Bk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginUserLambdaFunction"
              },
              "CodeSha256": "s7U6cdf03cTX7eYzrrXplfP+IkgI1nHyejqM6CrCevI="
            }
          },
          "SignupUserLambdaVersion32WGYfI0BjHcZ6DV0gtS4sqszyvbxO31jSjVblc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupUserLambdaFunction"
              },
              "CodeSha256": "Fj6ILWhKlhGGParic/pQ+Xwh022kewMBve5hnDvXUc8="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-energy-stats",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserSignup": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "signup",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserPrivate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "private",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserLoginOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserSignupOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserSignup"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserPrivateOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserPrivate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserSignupPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserSignup"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SignupUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SignupUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserPrivatePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserPrivate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "PrivateAuthorizerApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PrivateAPILambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "PrivateAuthorizerApiGatewayAuthorizer"
          },
          "PrivateAuthorizerApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 300,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "PrivateAuthorizer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                {
                  "Fn::GetAtt": [
                    "UserPool",
                    "Arn"
                  ]
                }
              ]
            }
          },
          "ApiGatewayDeployment1667658828730": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodUserLoginOptions",
              "ApiGatewayMethodUserSignupOptions",
              "ApiGatewayMethodUserPrivateOptions",
              "ApiGatewayMethodUserLoginPost",
              "ApiGatewayMethodUserSignupPost",
              "ApiGatewayMethodUserPrivatePost"
            ]
          },
          "LoginUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SignupUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PrivateAPILambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PrivateAPILambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "energy-stats-auth-pool",
              "Schema": [
                {
                  "Name": "email",
                  "Required": true,
                  "Mutable": true
                },
                {
                  "Name": "given_name",
                  "Required": true,
                  "Mutable": false
                },
                {
                  "Name": "family_name",
                  "Required": true,
                  "Mutable": false
                }
              ],
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 6
                }
              },
              "AutoVerifiedAttributes": [
                "email"
              ]
            }
          },
          "UserClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "user-pool-ui",
              "GenerateSecret": false,
              "UserPoolId": {
                "Ref": "UserPool"
              },
              "AccessTokenValidity": 5,
              "IdTokenValidity": 5,
              "ExplicitAuthFlows": [
                "ADMIN_NO_SRP_AUTH"
              ]
            }
          },
          "StaticSite": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "AccessControl": "PublicRead",
              "BucketName": "energy.simonarcher.info",
              "WebsiteConfiguration": {
                "IndexDocument": "index.html",
                "ErrorDocument": "index.html"
              }
            }
          },
          "StaticSiteS3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "StaticSite"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Sid": "PublicReadGetObject",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "StaticSite"
                          },
                          "/*"
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          },
          "DnsRecord": {
            "Type": "AWS::Route53::RecordSetGroup",
            "Properties": {
              "HostedZoneName": "simonarcher.info.",
              "RecordSets": [
                {
                  "Name": "energy.simonarcher.info",
                  "Type": "A",
                  "AliasTarget": {
                    "DNSName": "s3-website-us-east-1.amazonaws.com",
                    "HostedZoneId": "Z3AQBSTGFYJSTF"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-energy-stats-dev-ServerlessDeploymentBucketName"
            }
          },
          "PrivateAPILambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PrivateAPILambdaVersionZQz60VO7rv8vdZPJ0wD76EabJmGXGs0Uu1bhN6p49M"
            },
            "Export": {
              "Name": "sls-energy-stats-dev-PrivateAPILambdaFunctionQualifiedArn"
            }
          },
          "LoginUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginUserLambdaVersion0emDLVWzTXjdhGhciVf1COPItWsIFjUGQAb5fXt5Bk"
            },
            "Export": {
              "Name": "sls-energy-stats-dev-LoginUserLambdaFunctionQualifiedArn"
            }
          },
          "SignupUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupUserLambdaVersion32WGYfI0BjHcZ6DV0gtS4sqszyvbxO31jSjVblc"
            },
            "Export": {
              "Name": "sls-energy-stats-dev-SignupUserLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-energy-stats-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "esbuild": {
        "bundle": true,
        "minify": false
      },
      "aliasHostedZoneId": "Z3AQBSTGFYJSTF",
      "aliasDNSName": "s3-website-us-east-1.amazonaws.com",
      "siteName": "energy.simonarcher.info",
      "webpack": {
        "webpackConfig": "webpack.config.js",
        "includeModules": false,
        "packager": "npm",
        "excludeFiles": "src/**/*.test.js"
      }
    },
    "plugins": [
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "loginUser": {
        "handler": "backend/auth/login.handler",
        "events": [
          {
            "http": {
              "path": "user/login",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "energy-stats-dev-loginUser",
        "package": {
          "artifact": ".serverless/loginUser.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "LoginUserLambdaVersion0emDLVWzTXjdhGhciVf1COPItWsIFjUGQAb5fXt5Bk"
      },
      "signupUser": {
        "handler": "backend/auth/signup.handler",
        "events": [
          {
            "http": {
              "path": "user/signup",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "energy-stats-dev-signupUser",
        "package": {
          "artifact": ".serverless/signupUser.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "SignupUserLambdaVersion32WGYfI0BjHcZ6DV0gtS4sqszyvbxO31jSjVblc"
      },
      "privateAPI": {
        "handler": "backend/auth/private.handler",
        "events": [
          {
            "http": {
              "path": "user/private",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "name": "PrivateAuthorizer",
                "arn": {
                  "Fn::GetAtt": [
                    "UserPool",
                    "Arn"
                  ]
                },
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": [
                  "email"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "energy-stats-dev-privateAPI",
        "package": {
          "artifact": ".serverless/privateAPI.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "PrivateAPILambdaVersionZQz60VO7rv8vdZPJ0wD76EabJmGXGs0Uu1bhN6p49M"
      }
    },
    "resources": {
      "Resources": {
        "UserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "energy-stats-auth-pool",
            "Schema": [
              {
                "Name": "email",
                "Required": true,
                "Mutable": true
              },
              {
                "Name": "given_name",
                "Required": true,
                "Mutable": false
              },
              {
                "Name": "family_name",
                "Required": true,
                "Mutable": false
              }
            ],
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 6
              }
            },
            "AutoVerifiedAttributes": [
              "email"
            ]
          }
        },
        "UserClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "user-pool-ui",
            "GenerateSecret": false,
            "UserPoolId": {
              "Ref": "UserPool"
            },
            "AccessTokenValidity": 5,
            "IdTokenValidity": 5,
            "ExplicitAuthFlows": [
              "ADMIN_NO_SRP_AUTH"
            ]
          }
        },
        "StaticSite": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "AccessControl": "PublicRead",
            "BucketName": "energy.simonarcher.info",
            "WebsiteConfiguration": {
              "IndexDocument": "index.html",
              "ErrorDocument": "index.html"
            }
          }
        },
        "StaticSiteS3BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "StaticSite"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "PublicReadGetObject",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "StaticSite"
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        },
        "DnsRecord": {
          "Type": "AWS::Route53::RecordSetGroup",
          "Properties": {
            "HostedZoneName": "simonarcher.info.",
            "RecordSets": [
              {
                "Name": "energy.simonarcher.info",
                "Type": "A",
                "AliasTarget": {
                  "DNSName": "s3-website-us-east-1.amazonaws.com",
                  "HostedZoneId": "Z3AQBSTGFYJSTF"
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "energy-stats",
      "variablesResolutionMode": "20210326",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/energy-stats/dev/code-artifacts",
        "artifactDirectoryName": "serverless/energy-stats/dev/1667658854764-2022-11-05T14:34:14.764Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/energy-stats/dev/1667658854764-2022-11-05T14:34:14.764Z",
    "artifact": ""
  }
}